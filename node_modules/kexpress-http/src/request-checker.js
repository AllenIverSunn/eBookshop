const kexpress = require('kexpress');
const Prehandler = kexpress.core.prehandler.Prehandler;
const checkFields = require('./fields-checker').checkFields;

class RequestChecker extends Prehandler {
    constructor(errorHandler) {
        super();

        this._errorHandler = errorHandler;
    }

    get name() {
        return 'request-checker';
    }

    async handle(req, res, context, options) {
        if ( !options ) {
            return true;
        }

        let fieldCheckResult = [];
        if ( options.params ) {
            const paramsCheckResult = await checkFields(req.params, options.params, 'params');
            fieldCheckResult = fieldCheckResult.concat(paramsCheckResult);
        }

        if ( options.query ) {
            const queryCheckResult = await checkFields(req.query, options.query, 'query');
            fieldCheckResult = fieldCheckResult.concat(queryCheckResult);
        }

        if ( options.body ) {
            const bodyCheckResult = await checkFields(req.body, options.body, 'body');
            fieldCheckResult = fieldCheckResult.concat(bodyCheckResult);
        }

        if ( fieldCheckResult.length > 0 ) {
            await this._errorHandler(req, res, {
                details: fieldCheckResult
            });

            return false;
        }

        return true;
    }
}

module.exports = {
    RequestChecker
};
