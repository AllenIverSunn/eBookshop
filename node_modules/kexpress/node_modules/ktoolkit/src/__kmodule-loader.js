const fs = require('fs');
const path = require('path');

function createModuleLoader(filePath, innerPath) {
    const subFiles = fs.readdirSync(filePath);

    if ( subFiles.indexOf('index.js') !== -1 ) {
        return require(`${innerPath}`);
    }

    const moduleInstance = Object.create(null);
    subFiles.forEach(subFile => {
        const fileStats = fs.statSync(`${filePath}/${subFile}`);
        if ( fileStats.isDirectory() ) {
            const subFilePath = `${filePath}/${subFile}`;
            const subModulePath = `${innerPath}/${subFile}`;

            moduleInstance[subFile] = createModuleLoader(subFilePath, subModulePath);
        }

        if ( subFile === '__kmodule-loader.js' ) {
            return;
        }

        const pathParts = path.parse(subFile);
        if ( pathParts.ext !== '.js' ) {
            return;
        }

        const moduleName = pathParts.name;
        const modulePath = `${innerPath}/${moduleName}`;
        Object.defineProperty(moduleInstance, moduleName, {
            get: function() {
                const nodeModule = require(modulePath);
                Object.defineProperty(moduleInstance, moduleName, {
                    enumerable: true,
                    value: nodeModule
                });

                return nodeModule;
            },
            enumerable: true,
            configurable: true
        });
    });

    return moduleInstance;
}

module.exports = createModuleLoader(`${__dirname}`, '.');
